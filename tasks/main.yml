- name: "Install sudo utility"
  ansible.builtin.include_tasks: install_sudo.yml

- name: "Check that 'set_auth_for_group' and 'set_auth_for_user' not both defined"
  ansible.builtin.fail:
    msg: "'set_auth_for_group' and 'set_auth_for_user' cannot both be defined"
  when: (set_auth_for_group is defined) and
        (set_auth_for_user is defined)

- name: "Grant full/limited sudo authority for group '{{ set_auth_for_group }}'"
  ansible.builtin.include_tasks: config_group_auth.yml
  when: set_auth_for_group is defined

- name: "Grant full/limited sudo authority for user '{{ set_auth_for_user }}'"
  ansible.builtin.include_tasks: config_user_auth.yml
  when: set_auth_for_user is defined

- name: "Set wait between sudo ask-password events"
  ansible.builtin.include_tasks: config_ask_pswd.yml
  when: ask_password_timeout is defined

- name: "Set number of minutes to timeout, when waiting for sudo password"
  ansible.builtin.include_tasks: config_pswd_prompt.yml
  when: password_prompt_timeout_minutes is defined

- name: "Use root-user umask for file creation (not user's umask)"
  ansible.builtin.include_tasks: set_root_umask.yml
  when: use_root_umask is defined

- name: "Set sudo-alias shell enhancement for user '{{ user_for_shell_enhancements }}'"
  ansible.builtin.include_tasks: set_sudo_alias.yml
  when: user_for_shell_enhancements is defined

